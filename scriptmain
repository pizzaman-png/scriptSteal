-- Roblox Mod Menu GUI
-- Funcionalidades: NoClip, Teleport, ESP, Fly

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Estados das funcionalidades
local states = {
    menuOpen = false,
    noClip = false,
    esp = false,
    fly = false,
    flySpeed = 16  -- Velocidade padr√£o reduzida
}

-- Posi√ß√µes salvas
local savedPositions = {}
local maxSaveSlots = 25  -- M√°ximo de 25 posi√ß√µes

-- Vari√°veis para funcionalidades
local flyBodyVelocity = nil
local flyBodyAngularVelocity = nil
local espConnections = {}
local noClipConnections = {}

-- === CRIA√á√ÉO DA GUI ===
local function createModMenuGUI()
    -- ScreenGui principal
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ModMenuGUI"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true

    -- Frame principal do menu
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 320, 0, 450)
    mainFrame.Position = UDim2.new(0, 100, 0, 100)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainFrame.BorderSizePixel = 0
    mainFrame.Visible = false
    mainFrame.Parent = screenGui
    
    -- Corner radius
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame
    
    -- Drop shadow
    local shadow = Instance.new("Frame")
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, -5, 0, -5)
    shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    shadow.BackgroundTransparency = 0.7
    shadow.ZIndex = -1
    shadow.Parent = mainFrame
    
    local shadowCorner = Instance.new("UICorner")
    shadowCorner.CornerRadius = UDim.new(0, 15)
    shadowCorner.Parent = shadow

    -- Header
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 50)
    header.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    header.BorderSizePixel = 0
    header.Parent = mainFrame
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 12)
    headerCorner.Parent = header
    
    -- Fix header corners
    local headerFix = Instance.new("Frame")
    headerFix.Size = UDim2.new(1, 0, 0, 25)
    headerFix.Position = UDim2.new(0, 0, 1, -25)
    headerFix.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    headerFix.BorderSizePixel = 0
    headerFix.Parent = header

    -- T√≠tulo
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, -40, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "üéÆ Mod Menu"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold
    title.Parent = header

    -- Bot√£o fechar
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -40, 0, 10)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    closeButton.Text = "‚úï"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextScaled = true
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Parent = header
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 15)
    closeCorner.Parent = closeButton

    -- ScrollFrame para conte√∫do
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "ContentScroll"
    scrollFrame.Size = UDim2.new(1, -20, 1, -70)
    scrollFrame.Position = UDim2.new(0, 10, 0, 60)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ScrollBarThickness = 8
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 600)
    scrollFrame.Parent = mainFrame

    -- Layout do conte√∫do
    local layout = Instance.new("UIListLayout")
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 10)
    layout.Parent = scrollFrame

    return screenGui, mainFrame, scrollFrame, closeButton
end

-- === CRIAR BOT√ïES ===
local function createFeatureButton(parent, text, layoutOrder, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 40)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    button.LayoutOrder = layoutOrder
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    -- Status indicator
    local indicator = Instance.new("Frame")
    indicator.Name = "StatusIndicator"
    indicator.Size = UDim2.new(0, 12, 0, 12)
    indicator.Position = UDim2.new(1, -20, 0.5, -6)
    indicator.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    indicator.Parent = button
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 6)
    indicatorCorner.Parent = indicator
    
    -- Hover effect
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        local color = button:GetAttribute("Active") and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(60, 60, 60)
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = color}):Play()
    end)
    
    button.MouseButton1Click:Connect(callback)
    
    return button
end

-- === CRIAR SLIDER ===
local function createSlider(parent, labelText, minVal, maxVal, defaultVal, layoutOrder, callback)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 60)
    container.BackgroundTransparency = 1
    container.LayoutOrder = layoutOrder
    container.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.Text = labelText .. ": " .. defaultVal
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.Font = Enum.Font.Gotham
    label.Parent = container
    
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, 0, 0, 20)
    sliderFrame.Position = UDim2.new(0, 0, 0, 30)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    sliderFrame.Parent = container
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 10)
    sliderCorner.Parent = sliderFrame
    
    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 20, 1, 0)
    sliderButton.Position = UDim2.new((defaultVal - minVal) / (maxVal - minVal), -10, 0, 0)
    sliderButton.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    sliderButton.Text = ""
    sliderButton.Parent = sliderFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = sliderButton
    
    local dragging = false
    
    sliderButton.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mousePos = UserInputService:GetMouseLocation()
            local framePos = sliderFrame.AbsolutePosition.X
            local frameSize = sliderFrame.AbsoluteSize.X
            local relativePos = math.clamp((mousePos.X - framePos) / frameSize, 0, 1)
            
            sliderButton.Position = UDim2.new(relativePos, -10, 0, 0)
            local value = math.floor(minVal + (maxVal - minVal) * relativePos)
            label.Text = labelText .. ": " .. value
            callback(value)
        end
    end)
    
    return container
end

-- === FUNCIONALIDADES ===

-- NoClip
local function toggleNoClip()
    states.noClip = not states.noClip
    
    if states.noClip then
        -- Ativar NoClip
        for _, connection in pairs(noClipConnections) do
            connection:Disconnect()
        end
        
        noClipConnections = {}
        
        local function noClipPart(part)
            if part.CanCollide then
                part.CanCollide = false
                table.insert(noClipConnections, part:GetPropertyChangedSignal("CanCollide"):Connect(function()
                    part.CanCollide = false
                end))
            end
        end
        
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    noClipPart(part)
                end
            end
        end
        
        print("NoClip ATIVADO")
    else
        -- Desativar NoClip
        for _, connection in pairs(noClipConnections) do
            connection:Disconnect()
        end
        noClipConnections = {}
        
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
        
        print("NoClip DESATIVADO")
    end
end

-- ESP
local function toggleESP()
    states.esp = not states.esp
    
    if states.esp then
        -- Ativar ESP
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character then
                local highlight = Instance.new("Highlight")
                highlight.Name = "ESPHighlight"
                highlight.Adornee = otherPlayer.Character
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                highlight.Parent = otherPlayer.Character
                
                -- Nome do jogador
                if otherPlayer.Character:FindFirstChild("Head") then
                    local billboardGui = Instance.new("BillboardGui")
                    billboardGui.Name = "ESPName"
                    billboardGui.Size = UDim2.new(0, 200, 0, 50)
                    billboardGui.StudsOffset = Vector3.new(0, 2, 0)
                    billboardGui.Parent = otherPlayer.Character.Head
                    
                    local nameLabel = Instance.new("TextLabel")
                    nameLabel.Size = UDim2.new(1, 0, 1, 0)
                    nameLabel.BackgroundTransparency = 1
                    nameLabel.Text = otherPlayer.Name
                    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    nameLabel.TextScaled = true
                    nameLabel.Font = Enum.Font.GothamBold
                    nameLabel.TextStrokeTransparency = 0
                    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                    nameLabel.Parent = billboardGui
                end
            end
        end
        
        -- Conectar para novos jogadores
        espConnections.playerAdded = Players.PlayerAdded:Connect(function(newPlayer)
            if states.esp then
                newPlayer.CharacterAdded:Connect(function(character)
                    wait(1)
                    if states.esp then
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "ESPHighlight"
                        highlight.Adornee = character
                        highlight.FillColor = Color3.fromRGB(255, 0, 0)
                        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                        highlight.FillTransparency = 0.5
                        highlight.OutlineTransparency = 0
                        highlight.Parent = character
                    end
                end)
            end
        end)
        
        print("ESP ATIVADO")
    else
        -- Desativar ESP
        for _, connection in pairs(espConnections) do
            connection:Disconnect()
        end
        espConnections = {}
        
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer.Character then
                local highlight = otherPlayer.Character:FindFirstChild("ESPHighlight")
                if highlight then
                    highlight:Destroy()
                end
                
                local head = otherPlayer.Character:FindFirstChild("Head")
                if head then
                    local espName = head:FindFirstChild("ESPName")
                    if espName then
                        espName:Destroy()
                    end
                end
            end
        end
        
        print("ESP DESATIVADO")
    end
end

-- Fly
local function toggleFly()
    states.fly = not states.fly
    
    if states.fly then
        -- Ativar Fly
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = player.Character.HumanoidRootPart
            
            flyBodyVelocity = Instance.new("BodyVelocity")
            flyBodyVelocity.MaxForce = Vector3.new(2000, 2000, 2000)  -- For√ßa reduzida para movimento mais suave
            flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
            flyBodyVelocity.Parent = humanoidRootPart
            
            flyBodyAngularVelocity = Instance.new("BodyAngularVelocity")
            flyBodyAngularVelocity.MaxTorque = Vector3.new(2000, 2000, 2000)  -- Torque reduzido
            flyBodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
            flyBodyAngularVelocity.Parent = humanoidRootPart
        end
        
        print("Fly ATIVADO - Use WASD + Espa√ßo/Shift para voar")
    else
        -- Desativar Fly
        if flyBodyVelocity then
            flyBodyVelocity:Destroy()
            flyBodyVelocity = nil
        end
        if flyBodyAngularVelocity then
            flyBodyAngularVelocity:Destroy()
            flyBodyAngularVelocity = nil
        end
        
        print("Fly DESATIVADO")
    end
end

-- Sistema de Teleporte com movimento gradual
local function saveCurrentPosition()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local position = player.Character.HumanoidRootPart.Position
        
        local savedPos = {
            name = "Posi√ß√£o " .. (#savedPositions + 1),
            position = position,
            time = os.date("%H:%M:%S")
        }
        
        if #savedPositions >= maxSaveSlots then
            table.remove(savedPositions, 1)
        end
        
        table.insert(savedPositions, savedPos)
        updatePositionsList()
        
        print("Posi√ß√£o salva: " .. savedPos.name)
    end
end

local function teleportToPosition(targetPosition)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = player.Character.HumanoidRootPart
        local currentPosition = humanoidRootPart.Position
        
        -- Primeira fase: ir para cima
        local upPosition = Vector3.new(currentPosition.X, currentPosition.Y + 50, currentPosition.Z)
        
        -- Segunda fase: ir para cima da posi√ß√£o alvo
        local aboveTarget = Vector3.new(targetPosition.X, targetPosition.Y + 50, targetPosition.Z)
        
        -- Terceira fase: descer para a posi√ß√£o final
        local finalPosition = targetPosition
        
        -- Anima√ß√£o em 3 etapas
        local tween1 = TweenService:Create(
            humanoidRootPart,
            TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {CFrame = CFrame.new(upPosition)}
        )
        
        tween1:Play()
        tween1.Completed:Connect(function()
            local tween2 = TweenService:Create(
                humanoidRootPart,
                TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
                {CFrame = CFrame.new(aboveTarget)}
            )
            
            tween2:Play()
            tween2.Completed:Connect(function()
                local tween3 = TweenService:Create(
                    humanoidRootPart,
                    TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
                    {CFrame = CFrame.new(finalPosition)}
                )
                
                tween3:Play()
                print("Teleporte conclu√≠do!")
            end)
        end)
        
        print("Teleportando...")
    end
end

-- === CRIAR INTERFACE ===
local screenGui, mainFrame, scrollFrame, closeButton = createModMenuGUI()

-- Bot√µes principais
local noClipButton = createFeatureButton(scrollFrame, "NoClip: OFF", 1, function()
    toggleNoClip()
    noClipButton.Text = "NoClip: " .. (states.noClip and "ON" or "OFF")
    noClipButton:SetAttribute("Active", states.noClip)
    local indicator = noClipButton:FindFirstChild("StatusIndicator")
    indicator.BackgroundColor3 = states.noClip and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
    noClipButton.BackgroundColor3 = states.noClip and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(60, 60, 60)
end)

local espButton = createFeatureButton(scrollFrame, "ESP: OFF", 2, function()
    toggleESP()
    espButton.Text = "ESP: " .. (states.esp and "ON" or "OFF")
    espButton:SetAttribute("Active", states.esp)
    local indicator = espButton:FindFirstChild("StatusIndicator")
    indicator.BackgroundColor3 = states.esp and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
    espButton.BackgroundColor3 = states.esp and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(60, 60, 60)
end)

local flyButton = createFeatureButton(scrollFrame, "Fly: OFF", 3, function()
    toggleFly()
    flyButton.Text = "Fly: " .. (states.fly and "ON" or "OFF")
    flyButton:SetAttribute("Active", states.fly)
    local indicator = flyButton:FindFirstChild("StatusIndicator")
    indicator.BackgroundColor3 = states.fly and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
    flyButton.BackgroundColor3 = states.fly and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(60, 60, 60)
end)

-- Slider de velocidade (m√°ximo 33)
createSlider(scrollFrame, "Velocidade Fly", 5, 33, 16, 4, function(value)
    states.flySpeed = value
end)

-- Bot√µes de teleporte
local saveButton = createFeatureButton(scrollFrame, "üíæ Salvar Posi√ß√£o", 5, saveCurrentPosition)

-- Lista de posi√ß√µes salvas
local positionsFrame = Instance.new("Frame")
positionsFrame.Name = "PositionsFrame"
positionsFrame.Size = UDim2.new(1, 0, 0, 200)
positionsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
positionsFrame.LayoutOrder = 6
positionsFrame.Parent = scrollFrame

local positionsCorner = Instance.new("UICorner")
positionsCorner.CornerRadius = UDim.new(0, 8)
positionsCorner.Parent = positionsFrame

local positionsTitle = Instance.new("TextLabel")
positionsTitle.Size = UDim2.new(1, 0, 0, 30)
positionsTitle.BackgroundTransparency = 1
positionsTitle.Text = "üìç Posi√ß√µes Salvas (Max: 25)"
positionsTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
positionsTitle.TextScaled = true
positionsTitle.Font = Enum.Font.GothamBold
positionsTitle.Parent = positionsFrame

local positionsScroll = Instance.new("ScrollingFrame")
positionsScroll.Size = UDim2.new(1, -10, 1, -40)
positionsScroll.Position = UDim2.new(0, 5, 0, 35)
positionsScroll.BackgroundTransparency = 1
positionsScroll.ScrollBarThickness = 6
positionsScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
positionsScroll.Parent = positionsFrame

local positionsLayout = Instance.new("UIListLayout")
positionsLayout.SortOrder = Enum.SortOrder.LayoutOrder
positionsLayout.Padding = UDim.new(0, 5)
positionsLayout.Parent = positionsScroll

function updatePositionsList()
    for _, child in pairs(positionsScroll:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    for i, pos in pairs(savedPositions) do
        local posButton = Instance.new("TextButton")
        posButton.Size = UDim2.new(1, 0, 0, 35)
        posButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        posButton.Text = pos.name .. " - " .. pos.time
        posButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        posButton.TextScaled = true
        posButton.Font = Enum.Font.Gotham
        posButton.Parent = positionsScroll
        
        local posCorner = Instance.new("UICorner")
        posCorner.CornerRadius = UDim.new(0, 6)
        posCorner.Parent = posButton
        
        posButton.MouseButton1Click:Connect(function()
            teleportToPosition(pos.position)
        end)
        
        posButton.MouseEnter:Connect(function()
            TweenService:Create(posButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
        end)
        
        posButton.MouseLeave:Connect(function()
            TweenService:Create(posButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
        end)
    end
    
    positionsScroll.CanvasSize = UDim2.new(0, 0, 0, #savedPositions * 40)
end

-- === CONTROLES ===

-- Fechar menu
closeButton.MouseButton1Click:Connect(function()
    states.menuOpen = false
    mainFrame.Visible = false
end)

-- Controle de voo com movimento mais suave
RunService.Heartbeat:Connect(function()
    if states.fly and flyBodyVelocity and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local camera = workspace.CurrentCamera
        local humanoidRootPart = player.Character.HumanoidRootPart
        
        local moveVector = Vector3.new(0, 0, 0)
        
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveVector = moveVector + camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveVector = moveVector - camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveVector = moveVector - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveVector = moveVector + camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            moveVector = moveVector + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
            moveVector = moveVector - Vector3.new(0, 1, 0)
        end
        
        -- Movimento mais suave com interpola√ß√£o
        local currentVelocity = flyBodyVelocity.Velocity
        local targetVelocity = moveVector * states.flySpeed
        local smoothedVelocity = currentVelocity:Lerp(targetVelocity, 0.3)
        
        flyBodyVelocity.Velocity = smoothedVelocity
    end
end)

-- Tecla para abrir menu (CTRL)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then
        states.menuOpen = not states.menuOpen
        mainFrame.Visible = states.menuOpen
        
        if states.menuOpen then
            TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(0, 320, 0, 450)}):Play()
        end
    end
    
    -- F1 para salvar posi√ß√£o r√°pida
    if input.KeyCode == Enum.KeyCode.F1 then
        saveCurrentPosition()
    end
end)

-- Tornar a janela arrast√°vel
local dragToggle = nil
local dragSpeed = 0.25
local dragStart = nil
local startPos = nil

local function updateInput(input)
    local delta = input.Position - dragStart
    local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    TweenService:Create(mainFrame, TweenInfo.new(dragSpeed), {Position = position}):Play()
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1
